apiVersion: v1
kind: Template
metadata:
  creationTimestamp: null
  name: api-template
parameters:  
- description: Name of app instance in OpenShift Origin
  name: OPENSHIFT_APP_NAME  
  required: true
- description: Docker Image
  name: DOCKER_PATH_AND_IMAGE  
  required: true
- description: Service endpoint for logstash
  name: LOGSTASH_URL  
  required: false
objects:
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: null
    generation: 1
    labels:
      app: ${OPENSHIFT_APP_NAME}
    name: ${OPENSHIFT_APP_NAME}
  spec:
    replicas: 1
    selector:
      app: ${OPENSHIFT_APP_NAME}
      deploymentconfig: ${OPENSHIFT_APP_NAME}
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftWebConsole
        creationTimestamp: null
        labels:
          app: ${OPENSHIFT_APP_NAME}
          deploymentconfig: ${OPENSHIFT_APP_NAME}
      spec:
        containers:
        - env:
          - name: LOGSTASH_URL
            value: ${LOGSTASH_URL}
          image: ${DOCKER_PATH_AND_IMAGE}
          imagePullPolicy: Always
          name: ${OPENSHIFT_APP_NAME}
          ports:
          - containerPort: 8080
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
    - type: ConfigChange
- apiVersion: v1
  kind: Route
  metadata:
    annotations:
      openshift.io/host.generated: "true"
    creationTimestamp: null
    labels:
      app: ${OPENSHIFT_APP_NAME}
    name: ${OPENSHIFT_APP_NAME}.api
  spec:
    host: null
    port:
      targetPort: 8081-tcp
    tls:
      insecureEdgeTerminationPolicy: Redirect
      termination: edge
    to:
      kind: Service
      name: ${OPENSHIFT_APP_NAME}
      weight: 100
    wildcardPolicy: None
  status:
    ingress:
    - conditions:
      - lastTransitionTime: 2018-11-02T13:40:35Z
        status: "True"
        type: Admitted
      host: null
      routerName: router
      wildcardPolicy: None
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: null
    labels:
      app: ${OPENSHIFT_APP_NAME}
    name: ${OPENSHIFT_APP_NAME}
  spec:
    ports:
    - name: 8081-tcp
      port: 8081
      protocol: TCP
      targetPort: 8081
    selector:
      deploymentconfig: ${OPENSHIFT_APP_NAME}
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
